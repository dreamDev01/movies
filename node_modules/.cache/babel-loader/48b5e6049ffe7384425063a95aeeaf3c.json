{"ast":null,"code":"import { ADD_TO_BASKET, REMOVE_TO_BASKET, UP_QUANTITY_TO_BASKET, DOWN_QUANTITY_TO_BASKET } from \"../actions\";\nimport { movies } from \"../data/movies\";\nconst initialState = {\n  movies: movies,\n  basket: []\n};\n\nconst storeReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let basket;\n  let index;\n\n  switch (action.type) {\n    case UP_QUANTITY_TO_BASKET:\n      basket = [...state.basket];\n      index = basket.findIndex(item => item.id === action.payload);\n      const upItem = { ...basket[index]\n      };\n      upItem.quantity++;\n      basket[index] = upItem;\n      return { ...state,\n        basket\n      };\n\n    case DOWN_QUANTITY_TO_BASKET:\n      basket = [...state.basket];\n      index = basket.findIndex(b => b.id === action.payload);\n      const downItem = { ...basket[index]\n      };\n      downItem.quantity--;\n      basket[index] = downItem;\n      return { ...state,\n        basket\n      };\n\n    case ADD_TO_BASKET:\n      basket = [...state.basket];\n      index = basket.findIndex(b => b.id === action.payload.id);\n\n      if (index < 0) {\n        basket.push({ ...action.payload,\n          quantity: 1\n        });\n      } else {\n        const updatedBasket = { ...basket[index]\n        };\n        updatedBasket.quantity++;\n        basket[index] = updatedBasket;\n      }\n\n      return { ...state,\n        basket\n      };\n\n    case REMOVE_TO_BASKET:\n      basket = [...state.cart];\n      index = basket.findIndex(item => item.id === action.payload);\n      basket.splice(index, 1);\n      return { ...state,\n        cart: basket\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default storeReducer;","map":{"version":3,"sources":["D:/DEV/Formation/01-starting-setup/01-starting-setup/src/reducers/store.reducer.js"],"names":["ADD_TO_BASKET","REMOVE_TO_BASKET","UP_QUANTITY_TO_BASKET","DOWN_QUANTITY_TO_BASKET","movies","initialState","basket","storeReducer","state","action","index","type","findIndex","item","id","payload","upItem","quantity","b","downItem","push","updatedBasket","cart","splice"],"mappings":"AAAA,SACEA,aADF,EAEEC,gBAFF,EAGEC,qBAHF,EAIEC,uBAJF,QAKO,YALP;AAMA,SAASC,MAAT,QAAuB,gBAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBD,EAAAA,MAAM,EAAEA,MADW;AAEnBE,EAAAA,MAAM,EAAE;AAFW,CAArB;;AAKA,MAAMC,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;AACrD,MAAIH,MAAJ;AACA,MAAII,KAAJ;;AAEA,UAAQD,MAAM,CAACE,IAAf;AACE,SAAKT,qBAAL;AACEI,MAAAA,MAAM,GAAG,CAAC,GAAGE,KAAK,CAACF,MAAV,CAAT;AACAI,MAAAA,KAAK,GAAGJ,MAAM,CAACM,SAAP,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAA9C,CAAR;AAEA,YAAMC,MAAM,GAAG,EACb,GAAGV,MAAM,CAACI,KAAD;AADI,OAAf;AAIAM,MAAAA,MAAM,CAACC,QAAP;AAEAX,MAAAA,MAAM,CAACI,KAAD,CAAN,GAAgBM,MAAhB;AAEA,aAAO,EAAE,GAAGR,KAAL;AAAYF,QAAAA;AAAZ,OAAP;;AAEF,SAAKH,uBAAL;AACEG,MAAAA,MAAM,GAAG,CAAC,GAAGE,KAAK,CAACF,MAAV,CAAT;AACAI,MAAAA,KAAK,GAAGJ,MAAM,CAACM,SAAP,CAAkBM,CAAD,IAAOA,CAAC,CAACJ,EAAF,KAASL,MAAM,CAACM,OAAxC,CAAR;AAEA,YAAMI,QAAQ,GAAG,EACf,GAAGb,MAAM,CAACI,KAAD;AADM,OAAjB;AAIAS,MAAAA,QAAQ,CAACF,QAAT;AAEAX,MAAAA,MAAM,CAACI,KAAD,CAAN,GAAgBS,QAAhB;AAEA,aAAO,EAAE,GAAGX,KAAL;AAAYF,QAAAA;AAAZ,OAAP;;AAEF,SAAKN,aAAL;AACEM,MAAAA,MAAM,GAAG,CAAC,GAAGE,KAAK,CAACF,MAAV,CAAT;AACAI,MAAAA,KAAK,GAAGJ,MAAM,CAACM,SAAP,CAAkBM,CAAD,IAAOA,CAAC,CAACJ,EAAF,KAASL,MAAM,CAACM,OAAP,CAAeD,EAAhD,CAAR;;AAEA,UAAIJ,KAAK,GAAG,CAAZ,EAAe;AACbJ,QAAAA,MAAM,CAACc,IAAP,CAAY,EAAE,GAAGX,MAAM,CAACM,OAAZ;AAAqBE,UAAAA,QAAQ,EAAE;AAA/B,SAAZ;AACD,OAFD,MAEO;AACL,cAAMI,aAAa,GAAG,EACpB,GAAGf,MAAM,CAACI,KAAD;AADW,SAAtB;AAIAW,QAAAA,aAAa,CAACJ,QAAd;AACAX,QAAAA,MAAM,CAACI,KAAD,CAAN,GAAgBW,aAAhB;AACD;;AAED,aAAO,EAAE,GAAGb,KAAL;AAAYF,QAAAA;AAAZ,OAAP;;AACF,SAAKL,gBAAL;AACEK,MAAAA,MAAM,GAAG,CAAC,GAAGE,KAAK,CAACc,IAAV,CAAT;AACAZ,MAAAA,KAAK,GAAGJ,MAAM,CAACM,SAAP,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAA9C,CAAR;AAEAT,MAAAA,MAAM,CAACiB,MAAP,CAAcb,KAAd,EAAqB,CAArB;AAEA,aAAO,EAAE,GAAGF,KAAL;AAAYc,QAAAA,IAAI,EAAEhB;AAAlB,OAAP;;AACF;AACE,aAAOE,KAAP;AArDJ;AAuDD,CA3DD;;AA6DA,eAAeD,YAAf","sourcesContent":["import {\r\n  ADD_TO_BASKET,\r\n  REMOVE_TO_BASKET,\r\n  UP_QUANTITY_TO_BASKET,\r\n  DOWN_QUANTITY_TO_BASKET,\r\n} from \"../actions\";\r\nimport { movies } from \"../data/movies\";\r\n\r\nconst initialState = {\r\n  movies: movies,\r\n  basket: [],\r\n};\r\n\r\nconst storeReducer = (state = initialState, action) => {\r\n  let basket;\r\n  let index;\r\n\r\n  switch (action.type) {\r\n    case UP_QUANTITY_TO_BASKET:\r\n      basket = [...state.basket];\r\n      index = basket.findIndex((item) => item.id === action.payload);\r\n\r\n      const upItem = {\r\n        ...basket[index],\r\n      };\r\n\r\n      upItem.quantity++;\r\n\r\n      basket[index] = upItem;\r\n\r\n      return { ...state, basket };\r\n\r\n    case DOWN_QUANTITY_TO_BASKET:\r\n      basket = [...state.basket];\r\n      index = basket.findIndex((b) => b.id === action.payload);\r\n\r\n      const downItem = {\r\n        ...basket[index],\r\n      };\r\n\r\n      downItem.quantity--;\r\n\r\n      basket[index] = downItem;\r\n\r\n      return { ...state, basket };\r\n\r\n    case ADD_TO_BASKET:\r\n      basket = [...state.basket];\r\n      index = basket.findIndex((b) => b.id === action.payload.id);\r\n\r\n      if (index < 0) {\r\n        basket.push({ ...action.payload, quantity: 1 });\r\n      } else {\r\n        const updatedBasket = {\r\n          ...basket[index],\r\n        };\r\n\r\n        updatedBasket.quantity++;\r\n        basket[index] = updatedBasket;\r\n      }\r\n\r\n      return { ...state, basket };\r\n    case REMOVE_TO_BASKET:\r\n      basket = [...state.cart];\r\n      index = basket.findIndex((item) => item.id === action.payload);\r\n\r\n      basket.splice(index, 1);\r\n\r\n      return { ...state, cart: basket };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default storeReducer;\r\n"]},"metadata":{},"sourceType":"module"}
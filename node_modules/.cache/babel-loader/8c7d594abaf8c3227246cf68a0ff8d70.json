{"ast":null,"code":"import { ADD_TO_BASKET, REMOVE_TO_BASKET, UP_QUANTITY_TO_BASKET, DOWN_QUANTITY_TO_BASKET } from \"../actions\";\nimport { movies } from \"../data/movies\";\nconst initialState = {\n  movies: movies,\n  basket: []\n};\n\nconst movieStoreReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newBasket;\n  let index;\n\n  switch (action.type) {\n    case UP_QUANTITY_TO_BASKET:\n      newBasket = [...state.basket];\n      index = newBasket.findIndex(item => item.id === action.payload);\n      const upItem = { ...newBasket[index]\n      };\n      upItem.quantity++;\n      newBasket[index] = upItem;\n      return { ...state,\n        newBasket\n      };\n\n    case DOWN_QUANTITY_TO_BASKET:\n      newBasket = [...state.basket];\n      index = newBasket.findIndex(b => b.id === action.payload);\n      const downItem = { ...newBasket[index]\n      };\n      downItem.quantity--;\n      newBasket[index] = downItem;\n      return { ...state,\n        newBasket\n      };\n\n    case ADD_TO_BASKET:\n      newBasket = [...state.basket];\n      index = newBasket.findIndex(b => b.id === action.payload.id);\n\n      if (index < 0) {\n        newBasket.push({ ...action.payload,\n          quantity: 1\n        });\n      } else {\n        const updatedBasket = { ...newBasket[index]\n        };\n        updatedBasket.quantity++;\n        newBasket[index] = updatedBasket;\n      }\n\n      console.log(newBasket);\n      return { ...state,\n        newBasket\n      };\n\n    case REMOVE_TO_BASKET:\n      newBasket = [...state.cart];\n      index = newBasket.findIndex(item => item.id === action.payload);\n      newBasket.splice(index, 1);\n      return { ...state,\n        cart: newBasket\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default movieStoreReducer;","map":{"version":3,"sources":["D:/DEV/Formation/01-starting-setup/01-starting-setup/src/reducers/movieStore.reducer.js"],"names":["ADD_TO_BASKET","REMOVE_TO_BASKET","UP_QUANTITY_TO_BASKET","DOWN_QUANTITY_TO_BASKET","movies","initialState","basket","movieStoreReducer","state","action","newBasket","index","type","findIndex","item","id","payload","upItem","quantity","b","downItem","push","updatedBasket","console","log","cart","splice"],"mappings":"AAAA,SACEA,aADF,EAEEC,gBAFF,EAGEC,qBAHF,EAIEC,uBAJF,QAKO,YALP;AAMA,SAASC,MAAT,QAAuB,gBAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBD,EAAAA,MAAM,EAAEA,MADW;AAEnBE,EAAAA,MAAM,EAAE;AAFW,CAArB;;AAKA,MAAMC,iBAAiB,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;AAC1D,MAAIC,SAAJ;AACA,MAAIC,KAAJ;;AAEA,UAAQF,MAAM,CAACG,IAAf;AACE,SAAKV,qBAAL;AACEQ,MAAAA,SAAS,GAAG,CAAC,GAAGF,KAAK,CAACF,MAAV,CAAZ;AACAK,MAAAA,KAAK,GAAGD,SAAS,CAACG,SAAV,CAAqBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACO,OAAjD,CAAR;AAEA,YAAMC,MAAM,GAAG,EACb,GAAGP,SAAS,CAACC,KAAD;AADC,OAAf;AAIAM,MAAAA,MAAM,CAACC,QAAP;AAEAR,MAAAA,SAAS,CAACC,KAAD,CAAT,GAAmBM,MAAnB;AAEA,aAAO,EAAE,GAAGT,KAAL;AAAYE,QAAAA;AAAZ,OAAP;;AAEF,SAAKP,uBAAL;AACEO,MAAAA,SAAS,GAAG,CAAC,GAAGF,KAAK,CAACF,MAAV,CAAZ;AACAK,MAAAA,KAAK,GAAGD,SAAS,CAACG,SAAV,CAAqBM,CAAD,IAAOA,CAAC,CAACJ,EAAF,KAASN,MAAM,CAACO,OAA3C,CAAR;AAEA,YAAMI,QAAQ,GAAG,EACf,GAAGV,SAAS,CAACC,KAAD;AADG,OAAjB;AAIAS,MAAAA,QAAQ,CAACF,QAAT;AAEAR,MAAAA,SAAS,CAACC,KAAD,CAAT,GAAmBS,QAAnB;AAEA,aAAO,EAAE,GAAGZ,KAAL;AAAYE,QAAAA;AAAZ,OAAP;;AAEF,SAAKV,aAAL;AACEU,MAAAA,SAAS,GAAG,CAAC,GAAGF,KAAK,CAACF,MAAV,CAAZ;AACAK,MAAAA,KAAK,GAAGD,SAAS,CAACG,SAAV,CAAqBM,CAAD,IAAOA,CAAC,CAACJ,EAAF,KAASN,MAAM,CAACO,OAAP,CAAeD,EAAnD,CAAR;;AAEA,UAAIJ,KAAK,GAAG,CAAZ,EAAe;AACbD,QAAAA,SAAS,CAACW,IAAV,CAAe,EAAE,GAAGZ,MAAM,CAACO,OAAZ;AAAqBE,UAAAA,QAAQ,EAAE;AAA/B,SAAf;AACD,OAFD,MAEO;AACL,cAAMI,aAAa,GAAG,EACpB,GAAGZ,SAAS,CAACC,KAAD;AADQ,SAAtB;AAIAW,QAAAA,aAAa,CAACJ,QAAd;AACAR,QAAAA,SAAS,CAACC,KAAD,CAAT,GAAmBW,aAAnB;AACD;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYd,SAAZ;AACA,aAAO,EAAE,GAAGF,KAAL;AAAYE,QAAAA;AAAZ,OAAP;;AACF,SAAKT,gBAAL;AACES,MAAAA,SAAS,GAAG,CAAC,GAAGF,KAAK,CAACiB,IAAV,CAAZ;AACAd,MAAAA,KAAK,GAAGD,SAAS,CAACG,SAAV,CAAqBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACO,OAAjD,CAAR;AAEAN,MAAAA,SAAS,CAACgB,MAAV,CAAiBf,KAAjB,EAAwB,CAAxB;AAEA,aAAO,EAAE,GAAGH,KAAL;AAAYiB,QAAAA,IAAI,EAAEf;AAAlB,OAAP;;AACF;AACE,aAAOF,KAAP;AArDJ;AAuDD,CA3DD;;AA6DA,eAAeD,iBAAf","sourcesContent":["import {\r\n  ADD_TO_BASKET,\r\n  REMOVE_TO_BASKET,\r\n  UP_QUANTITY_TO_BASKET,\r\n  DOWN_QUANTITY_TO_BASKET,\r\n} from \"../actions\";\r\nimport { movies } from \"../data/movies\";\r\n\r\nconst initialState = {\r\n  movies: movies,\r\n  basket: [],\r\n};\r\n\r\nconst movieStoreReducer = (state = initialState, action) => {\r\n  let newBasket;\r\n  let index;\r\n\r\n  switch (action.type) {\r\n    case UP_QUANTITY_TO_BASKET:\r\n      newBasket = [...state.basket];\r\n      index = newBasket.findIndex((item) => item.id === action.payload);\r\n\r\n      const upItem = {\r\n        ...newBasket[index],\r\n      };\r\n\r\n      upItem.quantity++;\r\n\r\n      newBasket[index] = upItem;\r\n\r\n      return { ...state, newBasket };\r\n\r\n    case DOWN_QUANTITY_TO_BASKET:\r\n      newBasket = [...state.basket];\r\n      index = newBasket.findIndex((b) => b.id === action.payload);\r\n\r\n      const downItem = {\r\n        ...newBasket[index],\r\n      };\r\n\r\n      downItem.quantity--;\r\n\r\n      newBasket[index] = downItem;\r\n\r\n      return { ...state, newBasket };\r\n\r\n    case ADD_TO_BASKET:\r\n      newBasket = [...state.basket];\r\n      index = newBasket.findIndex((b) => b.id === action.payload.id);\r\n\r\n      if (index < 0) {\r\n        newBasket.push({ ...action.payload, quantity: 1 });\r\n      } else {\r\n        const updatedBasket = {\r\n          ...newBasket[index],\r\n        };\r\n\r\n        updatedBasket.quantity++;\r\n        newBasket[index] = updatedBasket;\r\n      }\r\n      console.log(newBasket);\r\n      return { ...state, newBasket };\r\n    case REMOVE_TO_BASKET:\r\n      newBasket = [...state.cart];\r\n      index = newBasket.findIndex((item) => item.id === action.payload);\r\n\r\n      newBasket.splice(index, 1);\r\n\r\n      return { ...state, cart: newBasket };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default movieStoreReducer;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { ADD_TO_BASKET, REMOVE_TO_BASKET } from \"../actions\";\nimport { movies } from \"../../data/movies\";\nconst initialState = {\n  movies: movies,\n  basket: []\n};\n\nconst movieStoreReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newBasket;\n  let index;\n\n  switch (action.type) {\n    case ADD_TO_BASKET:\n      newBasket = [...state.basket];\n      index = newBasket.findIndex(b => b.id === action.payload.id);\n\n      if (index < 0) {\n        newBasket.push({ ...action.payload\n        });\n      } else {\n        const updatedBasket = { ...newBasket[index]\n        };\n        updatedBasket.quantity++;\n        newBasket[index] = updatedBasket;\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    case REMOVE_TO_BASKET:\n      newBasket = [...state.basket];\n      index = newBasket.findIndex(item => item.id === action.payload);\n      newBasket.splice(index, 1);\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default movieStoreReducer;","map":{"version":3,"sources":["D:/DEV/Formation/01-starting-setup/01-starting-setup/src/redux/reducers/movieStore.reducer.js"],"names":["ADD_TO_BASKET","REMOVE_TO_BASKET","movies","initialState","basket","movieStoreReducer","state","action","newBasket","index","type","findIndex","b","id","payload","push","updatedBasket","quantity","item","splice"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,YAAhD;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBD,EAAAA,MAAM,EAAEA,MADW;AAEnBE,EAAAA,MAAM,EAAE;AAFW,CAArB;;AAKA,MAAMC,iBAAiB,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;AAC1D,MAAIC,SAAJ;AACA,MAAIC,KAAJ;;AAEA,UAAQF,MAAM,CAACG,IAAf;AACE,SAAKV,aAAL;AACEQ,MAAAA,SAAS,GAAG,CAAC,GAAGF,KAAK,CAACF,MAAV,CAAZ;AACAK,MAAAA,KAAK,GAAGD,SAAS,CAACG,SAAV,CAAqBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACO,OAAP,CAAeD,EAAnD,CAAR;;AAEA,UAAIJ,KAAK,GAAG,CAAZ,EAAe;AACbD,QAAAA,SAAS,CAACO,IAAV,CAAe,EAAE,GAAGR,MAAM,CAACO;AAAZ,SAAf;AACD,OAFD,MAEO;AACL,cAAME,aAAa,GAAG,EACpB,GAAGR,SAAS,CAACC,KAAD;AADQ,SAAtB;AAIAO,QAAAA,aAAa,CAACC,QAAd;AACAT,QAAAA,SAAS,CAACC,KAAD,CAAT,GAAmBO,aAAnB;AACD;;AAED,aAAO,EAAE,GAAGV,KAAL;AAAYF,QAAAA,MAAM,EAAEI;AAApB,OAAP;;AACF,SAAKP,gBAAL;AACEO,MAAAA,SAAS,GAAG,CAAC,GAAGF,KAAK,CAACF,MAAV,CAAZ;AACAK,MAAAA,KAAK,GAAGD,SAAS,CAACG,SAAV,CAAqBO,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYN,MAAM,CAACO,OAAjD,CAAR;AAEAN,MAAAA,SAAS,CAACW,MAAV,CAAiBV,KAAjB,EAAwB,CAAxB;AAEA,aAAO,EAAE,GAAGH,KAAL;AAAYF,QAAAA,MAAM,EAAEI;AAApB,OAAP;;AACF;AACE,aAAOF,KAAP;AAzBJ;AA2BD,CA/BD;;AAiCA,eAAeD,iBAAf","sourcesContent":["import { ADD_TO_BASKET, REMOVE_TO_BASKET } from \"../actions\";\r\nimport { movies } from \"../../data/movies\";\r\n\r\nconst initialState = {\r\n  movies: movies,\r\n  basket: [],\r\n};\r\n\r\nconst movieStoreReducer = (state = initialState, action) => {\r\n  let newBasket;\r\n  let index;\r\n\r\n  switch (action.type) {\r\n    case ADD_TO_BASKET:\r\n      newBasket = [...state.basket];\r\n      index = newBasket.findIndex((b) => b.id === action.payload.id);\r\n\r\n      if (index < 0) {\r\n        newBasket.push({ ...action.payload });\r\n      } else {\r\n        const updatedBasket = {\r\n          ...newBasket[index],\r\n        };\r\n\r\n        updatedBasket.quantity++;\r\n        newBasket[index] = updatedBasket;\r\n      }\r\n\r\n      return { ...state, basket: newBasket };\r\n    case REMOVE_TO_BASKET:\r\n      newBasket = [...state.basket];\r\n      index = newBasket.findIndex((item) => item.id === action.payload);\r\n\r\n      newBasket.splice(index, 1);\r\n\r\n      return { ...state, basket: newBasket };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default movieStoreReducer;\r\n"]},"metadata":{},"sourceType":"module"}
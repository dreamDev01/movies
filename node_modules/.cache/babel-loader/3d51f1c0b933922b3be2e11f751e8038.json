{"ast":null,"code":"var _jsxFileName = \"D:\\\\DEV\\\\Formation\\\\01-starting-setup\\\\01-starting-setup\\\\src\\\\components\\\\Pagination\\\\Pagination.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Pagination extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPrevious = () => {\n      this.props.onPrevPage();\n    };\n\n    this.onNext = () => {\n      this.props.onNextPage();\n    };\n\n    this.getAllPages = () => {\n      const c = Math.ceil(this.props.totalItemsCount / this.props.perPage);\n      const p = this.props.currentPage || 1;\n      const pagesToShow = this.props.pagesToShow || 9;\n      const pages = [];\n      pages.push(p);\n      const times = pagesToShow - 1;\n\n      for (let i = 0; i < times; i++) {\n        if (pages.length < pagesToShow) {\n          if (Math.min.apply(null, pages) > 1) {\n            pages.push(Math.min.apply(null, pages) - 1);\n          }\n        }\n\n        if (pages.length < pagesToShow) {\n          if (Math.max.apply(null, pages) < c) {\n            pages.push(Math.max.apply(null, pages) + 1);\n          }\n        }\n      }\n\n      pages.sort((a, b) => a - b);\n      return pages;\n    };\n  }\n\n  onPage(n) {\n    this.props.onGoToPage(n);\n  }\n\n  isLastPage() {\n    return this.props.perPage * this.props.currentPage >= this.props.totalItemsCount;\n  }\n\n  total() {\n    return Math.ceil(this.props.totalItemsCount / this.props.perPage) || 0;\n  }\n\n  getMin() {\n    return this.props.perPage * this.props.currentPage - this.props.perPage + 1;\n  }\n\n  getMax() {\n    let max = this.props.perPage * this.props.currentPage;\n\n    if (max > this.props.totalItemsCount) {\n      max = this.props.totalItemsCount;\n    }\n\n    return max;\n  }\n\n  render() {\n    const pages = this.getAllPages().map(pageNum => {\n      let buttonClass = \"page-item\";\n\n      if (pageNum === this.props.currentPage) {\n        buttonClass += \" active\";\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: buttonClass,\n        onClick: () => {\n          this.onPage(pageNum);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-link\",\n          children: pageNum\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this);\n    });\n    let prevButtonClass = \"page-item\";\n\n    if (this.props.currentPage === 1) {\n      prevButtonClass += \" disabled\";\n    }\n\n    const prevButton = /*#__PURE__*/_jsxDEV(\"li\", {\n      className: prevButtonClass,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"page-link\",\n        onClick: this.onPrevious,\n        tabIndex: \"-1\",\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n\n    let nextButtonClass = \"page-item\";\n\n    if (this.isLastPage()) {\n      nextButtonClass += \" disabled\";\n    }\n\n    const nextButton = /*#__PURE__*/_jsxDEV(\"li\", {\n      className: nextButtonClass,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: this.isLastPage(),\n        className: \"page-link\",\n        onClick: this.onNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"...\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination\",\n        children: [prevButton, pages, nextButton]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Pagination;","map":{"version":3,"sources":["D:/DEV/Formation/01-starting-setup/01-starting-setup/src/components/Pagination/Pagination.js"],"names":["React","Component","Pagination","onPrevious","props","onPrevPage","onNext","onNextPage","getAllPages","c","Math","ceil","totalItemsCount","perPage","p","currentPage","pagesToShow","pages","push","times","i","length","min","apply","max","sort","a","b","onPage","n","onGoToPage","isLastPage","total","getMin","getMax","render","map","pageNum","buttonClass","prevButtonClass","prevButton","nextButtonClass","nextButton"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Pagination extends Component {\r\n  onPage(n) {\r\n    this.props.onGoToPage(n);\r\n  }\r\n\r\n  isLastPage() {\r\n    return (\r\n      this.props.perPage * this.props.currentPage >= this.props.totalItemsCount\r\n    );\r\n  }\r\n\r\n  total() {\r\n    return Math.ceil(this.props.totalItemsCount / this.props.perPage) || 0;\r\n  }\r\n\r\n  getMin() {\r\n    return this.props.perPage * this.props.currentPage - this.props.perPage + 1;\r\n  }\r\n\r\n  getMax() {\r\n    let max = this.props.perPage * this.props.currentPage;\r\n    if (max > this.props.totalItemsCount) {\r\n      max = this.props.totalItemsCount;\r\n    }\r\n    return max;\r\n  }\r\n  onPrevious = () => {\r\n    this.props.onPrevPage();\r\n  };\r\n\r\n  onNext = () => {\r\n    this.props.onNextPage();\r\n  };\r\n\r\n  getAllPages = () => {\r\n    const c = Math.ceil(this.props.totalItemsCount / this.props.perPage);\r\n    const p = this.props.currentPage || 1;\r\n    const pagesToShow = this.props.pagesToShow || 9;\r\n    const pages = [];\r\n    pages.push(p);\r\n    const times = pagesToShow - 1;\r\n    for (let i = 0; i < times; i++) {\r\n      if (pages.length < pagesToShow) {\r\n        if (Math.min.apply(null, pages) > 1) {\r\n          pages.push(Math.min.apply(null, pages) - 1);\r\n        }\r\n      }\r\n      if (pages.length < pagesToShow) {\r\n        if (Math.max.apply(null, pages) < c) {\r\n          pages.push(Math.max.apply(null, pages) + 1);\r\n        }\r\n      }\r\n    }\r\n    pages.sort((a, b) => a - b);\r\n    return pages;\r\n  };\r\n\r\n  render() {\r\n    const pages = this.getAllPages().map((pageNum) => {\r\n      let buttonClass = \"page-item\";\r\n\r\n      if (pageNum === this.props.currentPage) {\r\n        buttonClass += \" active\";\r\n      }\r\n\r\n      return (\r\n        <li\r\n          className={buttonClass}\r\n          onClick={() => {\r\n            this.onPage(pageNum);\r\n          }}\r\n        >\r\n          <button className=\"page-link\">{pageNum}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let prevButtonClass = \"page-item\";\r\n\r\n    if (this.props.currentPage === 1) {\r\n      prevButtonClass += \" disabled\";\r\n    }\r\n\r\n    const prevButton = (\r\n      <li className={prevButtonClass}>\r\n        <button className=\"page-link\" onClick={this.onPrevious} tabIndex=\"-1\">\r\n          Previous\r\n        </button>\r\n      </li>\r\n    );\r\n\r\n    let nextButtonClass = \"page-item\";\r\n\r\n    if (this.isLastPage()) {\r\n      nextButtonClass += \" disabled\";\r\n    }\r\n\r\n    const nextButton = (\r\n      <li className={nextButtonClass}>\r\n        <button\r\n          disabled={this.isLastPage()}\r\n          className=\"page-link\"\r\n          onClick={this.onNext}\r\n        >\r\n          Next\r\n        </button>\r\n      </li>\r\n    );\r\n\r\n    return (\r\n      <nav aria-label=\"...\">\r\n        <ul className=\"pagination\">\r\n          {prevButton}\r\n          {pages}\r\n          {nextButton}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}
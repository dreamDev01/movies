{"ast":null,"code":"/*Functions to help for filter data*/\n\n/*Filter movies by date : return list of movies sort by date ascending or descending*/\nexport const filterByOrder = (list, sort) => {\n  if (!sort) return list;\n\n  if (sort === \"asc\") {\n    return list.slice().sort((a, b) => a.date - b.date);\n  } else {\n    return list.slice().sort((a, b) => b.date - a.date);\n  }\n};\n/*Filter movies by gender : return list of movies sort by gender*/\n\nexport const filterByGender = (list, gender) => {\n  if (!gender) return list;\n  return list.filter(movie => gender.includes(movie.gender));\n};\n/*Pagination : return list of movies for the current page*/\n\nexport const pagination = (state, args) => {\n  if (!args || !args.perPage || !args.currentPage) {\n    return state;\n  }\n\n  const pos = args.perPage * (args.currentPage - 1) || 0;\n  return state.slice(pos, pos + args.perPage);\n};","map":{"version":3,"sources":["D:/DEV/Projet/movies-store/movies-store/src/Helpers/Filter.helper.js"],"names":["filterByOrder","list","sort","slice","a","b","date","filterByGender","gender","filter","movie","includes","pagination","state","args","perPage","currentPage","pos"],"mappings":"AAAA;;AAEA;AACA,OAAO,MAAMA,aAAa,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC3C,MAAI,CAACA,IAAL,EAAW,OAAOD,IAAP;;AAEX,MAAIC,IAAI,KAAK,KAAb,EAAoB;AAClB,WAAOD,IAAI,CAACE,KAAL,GAAaD,IAAb,CAAkB,CAACE,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAvC,CAAP;AACD,GAFD,MAEO;AACL,WAAOL,IAAI,CAACE,KAAL,GAAaD,IAAb,CAAkB,CAACE,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,IAAF,GAASF,CAAC,CAACE,IAAvC,CAAP;AACD;AACF,CARM;AAUP;;AACA,OAAO,MAAMC,cAAc,GAAG,CAACN,IAAD,EAAOO,MAAP,KAAkB;AAC9C,MAAI,CAACA,MAAL,EAAa,OAAOP,IAAP;AAEb,SAAOA,IAAI,CAACQ,MAAL,CAAaC,KAAD,IAAWF,MAAM,CAACG,QAAP,CAAgBD,KAAK,CAACF,MAAtB,CAAvB,CAAP;AACD,CAJM;AAMP;;AACA,OAAO,MAAMI,UAAU,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACzC,MAAI,CAACA,IAAD,IAAS,CAACA,IAAI,CAACC,OAAf,IAA0B,CAACD,IAAI,CAACE,WAApC,EAAiD;AAC/C,WAAOH,KAAP;AACD;;AACD,QAAMI,GAAG,GAAGH,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACE,WAAL,GAAmB,CAAnC,KAAyC,CAArD;AAEA,SAAOH,KAAK,CAACV,KAAN,CAAYc,GAAZ,EAAiBA,GAAG,GAAGH,IAAI,CAACC,OAA5B,CAAP;AACD,CAPM","sourcesContent":["/*Functions to help for filter data*/\r\n\r\n/*Filter movies by date : return list of movies sort by date ascending or descending*/\r\nexport const filterByOrder = (list, sort) => {\r\n  if (!sort) return list;\r\n\r\n  if (sort === \"asc\") {\r\n    return list.slice().sort((a, b) => a.date - b.date);\r\n  } else {\r\n    return list.slice().sort((a, b) => b.date - a.date);\r\n  }\r\n};\r\n\r\n/*Filter movies by gender : return list of movies sort by gender*/\r\nexport const filterByGender = (list, gender) => {\r\n  if (!gender) return list;\r\n\r\n  return list.filter((movie) => gender.includes(movie.gender));\r\n};\r\n\r\n/*Pagination : return list of movies for the current page*/\r\nexport const pagination = (state, args) => {\r\n  if (!args || !args.perPage || !args.currentPage) {\r\n    return state;\r\n  }\r\n  const pos = args.perPage * (args.currentPage - 1) || 0;\r\n\r\n  return state.slice(pos, pos + args.perPage);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}